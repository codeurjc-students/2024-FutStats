name: CD Docker Build

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0.22
        options: >-
          --env MYSQL_ROOT_PASSWORD=17042002
          --env MYSQL_DATABASE=apirest
          --env MYSQL_USER=root
          --env MYSQL_PASSWORD=17042002
          --publish 3306:3306

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Install Docker Compose
        run: |
            sudo apt-get update
            sudo apt-get install -y docker-compose
      - name: Levantar contenedores en segundo plano
        run: docker-compose up -d --build
        working-directory: ./Docker

      - name: Wait for MySQL in Docker
        run: |
          echo "Waiting for MySQL to be ready..."
          retries=12
          # "db" es el servicio definido en docker-compose.yml
          until docker-compose exec -T db mysql -u root -p"17042002" -e "SELECT 1"; do
            if [ $retries -le 0 ]; then
              echo "MySQL not ready after multiple attempts, failing..."
              exit 1
            fi
            echo "MySQL not ready, waiting..."
            retries=$((retries-1))
            sleep 5
          done
          echo "MySQL is ready!"
        working-directory: ./Docker

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22.12.0'

      - name: Install Angular CLI Globally
        run: npm install -g @angular/cli

      - name: Install Angular Dependencies
        run: npm install
        working-directory: ./Frontend
        
      - name: Run Spring Boot tests Controllers
        run:  mvn test -Dtest="com.tfg.futstats.controllers.**"
        working-directory: ./Backend
      - name: Run Spring Boot tests Services
        run:  mvn test -Dtest="com.tfg.futstats.services.**" 
        working-directory: ./Backend

      - name: Run Angular Unit Tests
        run: ng test --watch=false --browsers=ChromeHeadless
        working-directory: ./Frontend

      - name: Run Admin Selenium Tests
        run: mvn test -Dtest="com.tfg.futstats.selenium.admin.**"
        working-directory: ./Backend

      - name: Run registeredUsers Selenium Tests
        run: mvn test -Dtest="com.tfg.futstats.selenium.registeredUsers.**"
        working-directory: ./Backend

      - name: Run nonRegisteredUsers Selenium Tests
        run: mvn test -Dtest="com.tfg.futstats.selenium.nonRegisteredUsers.**"
        working-directory: ./Backend
