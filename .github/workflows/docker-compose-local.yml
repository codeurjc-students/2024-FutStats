name: CD Docker Build

on:
  push:
    branches:
      - main
      - tester

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Install Docker Compose
        run: |
            sudo apt-get update
            sudo apt-get install -y docker-compose

      - name: Levantar contenedores en segundo plano
        run: docker-compose up -d --build
        working-directory: ./Docker

      - name: Stop running containers before tests
        run: docker-compose down
        working-directory: ./Docker

      - name: Levantar contenedor para pruebas
        run: docker-compose up -d db_test
        working-directory: ./Docker

      - name: Wait for MySQL Test in Docker
        run: |
          echo "Waiting for Test MySQL to be ready..."
          retries=12
          until docker-compose exec -T db_test mysql -u root -p"17042002" -e "SELECT 1"; do
            if [ $retries -le 0 ]; then
              echo "MySQL Test not ready after multiple attempts, failing..."
              exit 1
            fi
            echo "MySQL Test not ready, waiting..."
            retries=$((retries-1))
            sleep 5
          done
          echo "MySQL Test is ready!"
        working-directory: ./Docker

      - name: Run Spring Boot tests Controllers
        run: mvn test -Dtest="com.tfg.futstats.controllers.**" -Dspring.profiles.active=test
        working-directory: ./Backend

      - name: Run Spring Boot tests Services
        run: mvn test -Dtest="com.tfg.futstats.services.**" -Dspring.profiles.active=test
        working-directory: ./Backend

      - name: Run Angular Unit Tests
        run: ng test --watch=false --browsers=ChromeHeadless
        working-directory: ./Frontend

      - name: Run Spring Boot tests Selenium
        run: mvn test -Dtest="com.tfg.futstats.selenium.**" -Dspring.profiles.active=test
        working-directory: ./Backend

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build images
        working-directory: ./Docker
        run: docker-compose build

      - name: Push images
        working-directory: ./Docker
        run: docker-compose push
