name: CD Docker Build

on:
  push:
    branches:
      - main  # Cambia 'main' por la rama que quieras monitorizar

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        options: >-
          --env MYSQL_ROOT_PASSWORD=17042002
          --env MYSQL_DATABASE=api_rest
          --publish 3306:3306

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Java 21
      uses: actions/setup-java@v2
      with:
          java-version: '21'
          distribution: 'temurin'

    # Esperar a que la base de datos est√© completamente lista antes de continuar
    - name: Wait for MySQL to be ready
      run: |
        echo "Waiting for MySQL to be ready..."
        retries=12  # Intentos antes de fallar
        until mysql -h"localhost" -u"root" -p"17042002" -e "SELECT 1"; do
          if [ $retries -le 0 ]; then
            echo "MySQL not ready after multiple attempts, failing..."
            exit 1
          fi
          echo "MySQL not ready, waiting..."
          retries=$((retries-1))
          sleep 5
        done
        echo "MySQL is ready!"

    - name: Run Spring Boot tests
      run: mvn test
      working-directory: ./Backend

    - name: Set up Node.js 6.0.0
      uses: actions/setup-node@v2
      with:
        node-version: '6.0.0'

    - name: Install Angular dependencies
      run: npm install

    - name: Run Angular unit tests
      run: npm test -- --watch=false --browsers=ChromeHeadless
      working-directory: ./Frontend

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Deploy with Docker Compose
      run: docker-compose up -d --build
      working-directory: ./Docker

    - name: Build and push Docker image
      run: |
          tag=$(date +'%Y%m%d.%H%M%S')
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/tfg:main -t ${{ secrets.DOCKERHUB_USERNAME }}/tfg:$tag -f docker/Dockerfile .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/tfg:main
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/tfg:$tag
