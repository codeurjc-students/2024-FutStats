name: CD Docker Build

on:
  push:
    branches:
      - Hotfix

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Install Docker Compose
        run: |
            sudo apt-get update
            sudo apt-get install -y docker-compose

      - name: Check if ports are available
        run: |
          if netstat -tuln | grep -q ":3306 "; then
            echo "Port 3306 is already in use"
            exit 1
          fi

      - name: Stop any running containers
        run: docker-compose -f ./Docker/docker-compose.yml down
        working-directory: .

      - name: Levantar solo la base de datos
        run: docker-compose -f ./Docker/docker-compose.yml up -d db
        working-directory: .

      - name: Check container status
        run: |
          echo "Checking container status..."
          docker ps -a
          docker-compose -f ./Docker/docker-compose.yml ps
        working-directory: .

      - name: Check MySQL logs
        run: docker-compose -f ./Docker/docker-compose.yml logs db
        working-directory: .

      - name: Wait for MySQL in Docker
        run: |
          echo "Waiting for MySQL to be ready..."
          retries=30
          until docker-compose -f ./Docker/docker-compose.yml exec -T db mysqladmin ping -h localhost -u root -p"17042002" --silent; do
            if [ $retries -le 0 ]; then
              echo "MySQL not ready after multiple attempts, failing..."
              docker-compose -f ./Docker/docker-compose.yml logs db
              exit 1
            fi
            echo "MySQL not ready, waiting..."
            retries=$((retries-1))
            sleep 10
          done
          echo "MySQL is ready!"
        working-directory: .

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.19.0'

      - name: Install Angular CLI Globally
        run: npm install -g @angular/cli

      - name: Install Angular Dependencies
        run: npm install
        working-directory: ./Frontend
        
      - name: Run Spring Boot tests Controllers
        run:  mvn test -Dtest="com.tfg.futstats.controllers.**"
        working-directory: ./Backend
      - name: Run Spring Boot tests Services
        run:  mvn test -Dtest="com.tfg.futstats.services.**" 
        working-directory: ./Backend

      - name: Run Angular Unit Tests
        run: ng test --watch=false --browsers=ChromeHeadless
        working-directory: ./Frontend

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build images
        run: docker-compose -f ./Docker/docker-compose.yml build
        working-directory: .

      - name: Push images
        run: docker-compose -f ./Docker/docker-compose.yml push
        working-directory: .
